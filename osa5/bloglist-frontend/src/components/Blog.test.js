/* Import necessary modules for testing. */
import React from "react"
import "@testing-library/jest-dom"
import { render, screen } from "@testing-library/react"
import userEvent from "@testing-library/user-event"
import Blog from "./Blog"

/* Test no.1. */
test("renders blog.title and blog.author", () => {
  /* Define test blog. */
  const blog = {
    title: "Blog Title",
    author: "Blog Author",
    url: "www.blogurl.com",
    likes: 4,
    user: "12345",
  }

  /* Define test user. */
  const user = {
    id: "12345",
    name: "Test User",
  }

  /* Define mock function. */
  const setBlogs = jest.fn()

  /* Render Blog component. */
  render(<Blog blog={blog} user={user} setBlogs={setBlogs}/>)

  /* Make sure render includes text generated by Blog component. */
  const element = screen.getAllByText("Blog Title by Blog Author")
  expect(element).toBeDefined()
})

/* Test no.2. */
test("blog.url and blog.likes are rendered after button click", async () => {
  /* Define test blog. */
  const testblog = {
    title: "Blog Title",
    author: "Blog Author",
    url: "www.blogurl.com",
    likes: 4,
    user: "12345",
  }

  /* Define test user. */
  const testuser = {
    id: "12345",
    name: "Test User",
  }

  /* Define mock function. */
  const mockHandler = jest.fn()

  /* Render Blog component. */
  render(<Blog blog={testblog} user={testuser} setBlogs={mockHandler}/>)

  /* Create userEvent. */
  const user = userEvent.setup()
  const button = screen.getByText("Show")
  await user.click(button)

  /* Look for url and likes. */
  const url = screen.getByText("URL: www.blogurl.com")
  const likes = screen.getByText("Likes: 4")

  expect(url).toBeDefined()
  expect(likes).toBeDefined()
})

/* Test no.3. Note: This test does not work because the eventhandler for the
like button is not passed as a prop, but defined in the component. Also, the
alternative version of the test presented here does not work either, because
"Likes" are not updated on click. */
test.only("press 'like' button twice calls eventhandler twice", async () => {
  /* Define test blog. */
  const testblog = {
    title: "Blog Title",
    author: "Blog Author",
    url: "www.blogurl.com",
    likes: 4,
    user: "12345",
  }

  /* Define test user. */
  const testuser = {
    id: "12345",
    name: "Test User",
  }

  /* Define mock function. */
  const mockHandler = jest.fn()

  /* Render Blog component. */
  render(<Blog blog={testblog} user={testuser} setBlogs={mockHandler} />)

  /* Press button "Show". */
  const user = userEvent.setup()
  const button = screen.getByText("Show")
  await user.click(button)

  /* Press button "Like". */
  const button2 = screen.getByText("Like")
  await user.click(button2)
  await user.click(button2)

  /* Compare likes before and after clicking. */
  const likes = screen.getByText("Likes: 6")

  expect(likes).toBeDefined()

})